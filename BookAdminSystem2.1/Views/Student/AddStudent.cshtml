@model StConlethsBookSystem_v2._1.Models.StudentModels.AddStudentViewModel

@{
    ViewBag.Title = "AddStudent";
}


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal col-md-offset-4 col-md-8" style="padding-bottom: 25px;"> 
        <div class="col-md-offset-2">
            <h2>Add</h2>
        </div> 
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @autofocus = "autofocus"} })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (ViewBag.Type == "Student")
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @{
                        int year = DateTime.Now.Year;

                        if (DateTime.Now.Month < 6)
                        {
                            year--;
                        }
                        var result = new List<SelectListItem>();
                        result.Add(new SelectListItem
                        {
                            Value = "",
                            Text = "Please select a year"
                        });
                        result.Add(new SelectListItem
                        {
                            Value = year.ToString(),
                            Text = "1st Year"
                        });
                        result.Add(new SelectListItem
                        {
                            Value = (year - 1).ToString(),
                            Text = "2nd Year"
                        });
                        result.Add(new SelectListItem
                        {
                            Value = (year - 2).ToString(),
                            Text = "3rd Year"
                        });
                        result.Add(new SelectListItem
                        {
                            Value = (year - 3).ToString(),
                            Text = "5th Year / TY"
                        });
                        result.Add(new SelectListItem
                        {
                            Value = (year - 4).ToString(),
                            Text = "6th Year"
                        });                        
                    }
                    @Html.DropDownListFor(model => model.Year, result, new { style = "font-size: 1.2em", @class = "form-control", Name = "year" })                   
                    @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
                    @{
                        foreach (ModelState modelstate in ViewData.ModelState.Values)
                        {
                            foreach (ModelError error in modelstate.Errors)
                            {
                                if (error.ErrorMessage.Contains("Year Error:"))
                                {
                                    <div class="alert alert-danger">
                                        @Html.DisplayFor(modelItem => error.ErrorMessage)
                                    </div>
                                    <br />
                                    <br/>
                                }
                            }

                        }
                    }
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Class, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Class, new SelectList(ViewBag.Classes, "className", "className"), "Please Select a Value",  new { style = "font-size: 1.2em", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Class, "", new { @class = "text-danger" })
                    @{
                        foreach (ModelState modelstate in ViewData.ModelState.Values)
                        {
                            foreach (ModelError error in modelstate.Errors)
                            {
                                if (error.ErrorMessage.Contains("Class Error:"))
                                {
                                    <div class="alert alert-danger">
                                        @Html.DisplayFor(modelItem => error.ErrorMessage)
                                    </div>
                                }
                            }

                        }
                    }
                </div>                
            </div>
        }
        @if (ViewBag.Type == "Teacher")
        {
            @Html.HiddenFor(model => model.Year)
            @Html.HiddenFor(model => model.Class)
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
                @Html.ActionLink("Cancel", "Index", "Student", new { @class = "btn btn-danger" })
            </div>
        </div>
    </div>
    
}
<div class="row">

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
