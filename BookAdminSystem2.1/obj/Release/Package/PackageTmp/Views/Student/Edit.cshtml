@model StConlethsBookSystem_v2._1.Models.Student

@{
    ViewBag.Title = "Edit";
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()    
    <div class="form-horizontal col-md-8 col-md-offset-4">      
        <div class="col-md-offset-2">
            <h2>Edit</h2>
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (ViewBag.Type != "Teacher")
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="editor-field">
                        @{                          

                            int year = DateTime.Now.Year;

                            if (DateTime.Now.Month < 6)
                            {
                                year--;
                            }
                            var result = new List<SelectListItem>();
                            result.Add(new SelectListItem
                            {
                                Value = null,
                                Text = "All years "
                            });
                            result.Add(new SelectListItem
                            {
                                Value = year.ToString(),
                                Text = "1st Year"
                            });
                            result.Add(new SelectListItem
                            {
                                Value = (year - 1).ToString(),
                                Text = "2nd Year"
                            });
                            result.Add(new SelectListItem
                            {
                                Value = (year - 2).ToString(),
                                Text = "3rd Year"
                            });
                            result.Add(new SelectListItem
                            {
                                Value = (year - 3).ToString(),
                                Text = "5th Year / TY"
                            });
                            result.Add(new SelectListItem
                            {
                                Value = (year - 4).ToString(),
                                Text = "6th Year"
                            });
                            result.Add(new SelectListItem
                            {
                                Value = "1",
                                Text = "Teacher"
                            });
                        }
                        @Html.DropDownListFor(model => model.Year, result, new { style = "font-size: 1.2em", @class = "form-control", Name = "year" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Class, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Class, new SelectList(ViewBag.Classes, "className", "className"), new { style = "font-size: 1.2em", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Class, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        @if (ViewBag.Type == "Teacher")
        {
            @Html.HiddenFor(model => model.Year)
            @Html.HiddenFor(model => model.Class)
        }
        <div class="form-group row">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-success" />
                @Html.ActionLink("Cancel", "Index", "Student", new { @class = "btn btn-danger" })
            </div>
        </div>
    </div>
}

<div class="row">

</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
