@model StConlethsBookSystem_v2._1.Models.AdminModels.Register

@{
    ViewBag.Title = "Register";
}





@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="form-horizontal col-md-8 col-md-offset-4">
            <div class="col-md-offset-2"> 
                <h2>Register</h2>
            </div>            
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @autofocus = "autofocus" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-9 editor-field">
                    @{ var result = new List<SelectListItem>();
                        result.Add(new SelectListItem() { Value = "", Text = "Please Select" });
                        result.Add(new SelectListItem() { Value = "Admin", Text = "Admin" });
                        result.Add(new SelectListItem() { Value = "Teacher", Text = "Teacher" });
                    }
                    @Html.DropDownListFor(model => model.Role, result, new { style = "font-size: 1.2em", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    @{
                        foreach (ModelState modelstate in ViewData.ModelState.Values)
                        {
                            foreach (ModelError error in modelstate.Errors)
                            {
                                if (error.ErrorMessage.Contains("Password Error:"))
                                {
                                    <div>
                                        @Html.DisplayFor(modelItem => error.ErrorMessage)
                                    </div>
                                }
                            }

                        }
                    }
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password2, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                <div class="col-md-offset-5 col-md-7" style="padding-left: 50px;">
                    <input type="submit" value="Create" class="btn btn-success" />
                    @Html.ActionLink("Cancel", "Index", "Admin", new { @class = "btn btn-danger" })
                </div>
            </div>
        </div>
        
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
